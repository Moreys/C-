/*************************************************************************
  @FileName:  13_value.cc
  @Author:    morey
  @Email:     zymorey@gmail.com
  @Time:      Wed 12 Jun 2019 12:15:56 AM CST
 ************************************************************************/
                                                                         
#include <iostream>
#include <vector>

using std::endl;
using std::cout;
using std::vector;


//值语义，换到内存的角度讲那就是必须是能进行拷贝的
//所有的容器都是将值拷贝进自己的内存空间的
//如果要存放的元素不能进行拷贝，那么久会存在深拷贝和浅拷贝的问题
//如果是自定义类型  需要有
//  无参构造函数
//  拷贝构造函数
//  重载=号运算符----->实现深拷贝
//
//  理论提高
//  所有容器提供的都是值（value）语义，而非引用（reference）语义
//  容器插入元素操作的操作时，内部实现拷贝动作，所有容器里面存储的元素必须是能被拷贝的（必须提供拷贝构造函数）
//
//  除了queue与stack外，每个容器都提供返回迭代器的函数，运用返回的迭代器就可以访问元素了
//
//
//  通常STL不会丢出异常，要求使用者确保传入正确的参数
//  每个容器提供了一个默认构造函数和默认拷贝函数
//  可以将一个容器的内容作为第二个容器初始化的内容。


int main()
{
    std::cout << "Hello world" << std::endl;
    return 0;
}

